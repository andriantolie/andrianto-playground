{
  "_args": [
    [
      {
        "raw": "ReconnectingWebSocket@git+https://github.com/bitshares/reconnecting-websocket.git",
        "scope": null,
        "escapedName": "ReconnectingWebSocket",
        "name": "ReconnectingWebSocket",
        "rawSpec": "git+https://github.com/bitshares/reconnecting-websocket.git",
        "spec": "git+https://github.com/bitshares/reconnecting-websocket.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:bitshares/reconnecting-websocket.git",
          "sshUrl": "git+ssh://git@github.com/bitshares/reconnecting-websocket.git",
          "httpsUrl": "git+https://github.com/bitshares/reconnecting-websocket.git",
          "gitUrl": "git://github.com/bitshares/reconnecting-websocket.git",
          "shortcut": "github:bitshares/reconnecting-websocket",
          "directUrl": "https://raw.githubusercontent.com/bitshares/reconnecting-websocket/master/package.json"
        }
      },
      "/Users/andrianto/Sites/andrianto-playground/node_modules/graphenejs-ws"
    ]
  ],
  "_from": "git+https://github.com/bitshares/reconnecting-websocket.git",
  "_id": "ReconnectingWebSocket@1.0.1",
  "_inCache": true,
  "_location": "/ReconnectingWebSocket",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ReconnectingWebSocket@git+https://github.com/bitshares/reconnecting-websocket.git",
    "scope": null,
    "escapedName": "ReconnectingWebSocket",
    "name": "ReconnectingWebSocket",
    "rawSpec": "git+https://github.com/bitshares/reconnecting-websocket.git",
    "spec": "git+https://github.com/bitshares/reconnecting-websocket.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:bitshares/reconnecting-websocket.git",
      "sshUrl": "git+ssh://git@github.com/bitshares/reconnecting-websocket.git",
      "httpsUrl": "git+https://github.com/bitshares/reconnecting-websocket.git",
      "gitUrl": "git://github.com/bitshares/reconnecting-websocket.git",
      "shortcut": "github:bitshares/reconnecting-websocket",
      "directUrl": "https://raw.githubusercontent.com/bitshares/reconnecting-websocket/master/package.json"
    }
  },
  "_requiredBy": [
    "/graphenejs-ws"
  ],
  "_resolved": "git+https://github.com/bitshares/reconnecting-websocket.git#464ed2e54eb37b90b7f4f8532427ac2753d87148",
  "_shasum": "850ddaa955fabe4b89343f6938acbf5a2a431d3e",
  "_shrinkwrap": null,
  "_spec": "ReconnectingWebSocket@git+https://github.com/bitshares/reconnecting-websocket.git",
  "_where": "/Users/andrianto/Sites/andrianto-playground/node_modules/graphenejs-ws",
  "author": {
    "name": "Joe Walnes"
  },
  "bugs": {
    "url": "https://github.com/joewalnes/reconnecting-websocket/issues"
  },
  "dependencies": {},
  "description": "A small JavaScript library that decorates the WebSocket API to provide a WebSocket connection that will automatically reconnect if the connection is dropped.",
  "devDependencies": {},
  "gitHead": "464ed2e54eb37b90b7f4f8532427ac2753d87148",
  "homepage": "https://github.com/joewalnes/reconnecting-websocket",
  "license": "MIT",
  "main": "reconnecting-websocket.js",
  "name": "ReconnectingWebSocket",
  "optionalDependencies": {},
  "readme": "ReconnectingWebSocket\n=====================\n\nA small JavaScript library that decorates the WebSocket API to provide a WebSocket connection that will automatically reconnect if the connection is dropped.\n\nIt is API compatible, so when you have:\n\n```javascript\nvar ws = new WebSocket('ws://....');\n```\n\nyou can replace with:\n\n```javascript\nvar ws = new ReconnectingWebSocket('ws://....');\n```\n\nMinified library with gzip compression is less than 600 bytes.\n\nHow reconnections occur\n-----------------------\n\nWith the standard `WebSocket` API, the events you receive from the WebSocket instance are typically:\n\n    onopen\n    onmessage\n    onmessage\n    onmessage\n    onclose // At this point the WebSocket instance is dead.\n\nWith a `ReconnectingWebSocket`, after an `onclose` event is called it will automatically attempt to reconnect. In addition, a connection is attempted repeatedly (with a small pause) until it succeeds. So the events you receive may look something more like:\n\n    onopen\n    onmessage\n    onmessage\n    onmessage\n    onclose\n    // ReconnectingWebSocket attempts to reconnect\n    onopen\n    onmessage\n    onmessage\n    onmessage\n    onclose\n    // ReconnectingWebSocket attempts to reconnect\n    onopen\n    onmessage\n    onmessage\n    onmessage\n    onclose\n\nThis is all handled automatically for you by the library.\n\n## Parameters\n\n```javascript\nvar socket = new ReconnectingWebSocket(url, protocols, options);\n```\n\n#### `url`\n- The URL you are connecting to.\n- https://html.spec.whatwg.org/multipage/comms.html#network\n\n#### `protocols`\n- Optional string or array of protocols per the WebSocket spec.\n- https://tools.ietf.org/html/rfc6455\n\n#### `options`\n- Options (see below)\n\n## Options\n\nOptions can either be passed as the 3rd parameter upon instantiation or set directly on the object after instantiation:\n\n```javascript\nvar socket = new ReconnectingWebSocket(url, null, {debug: true, reconnectInterval: 3000});\n```\n\nor\n\n```javascript\nvar socket = new ReconnectingWebSocket(url);\nsocket.debug = true;\nsocket.timeoutInterval = 5400;\n```\n\n#### `debug`\n- Whether this instance should log debug messages or not. Debug messages are printed to `console.debug()`.\n- Accepts `true` or `false`\n- Default value: `false`\n\n#### `automaticOpen`\n- Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n- Accepts `true` or `false`\n- Default value: `true`\n\n#### `reconnectInterval`\n- The number of milliseconds to delay before attempting to reconnect.\n- Accepts `integer`\n- Default: `1000`\n\n#### `maxReconnectInterval`\n- The maximum number of milliseconds to delay a reconnection attempt.\n- Accepts `integer`\n- Default: `30000`\n\n####`reconnectDecay`\n- The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist.\n- Accepts `integer` or `float`\n- Default: `1.5`\n\n#### `timeoutInterval`\n- The maximum time in milliseconds to wait for a connection to succeed before closing and retrying.\n- Accepts `integer`\n- Default: `2000`\n\n#### `maxReconnectAttempts`\n- The maximum number of reconnection attempts that will be made before giving up. If null, reconnection attempts will be continue to be made forever.\n- Accepts `integer` or `null`.\n- Default: `null`\n\n#### `binaryType`\n- The binary type is required by some applications.\n- Accepts strings `'blob'` or `'arraybuffer'`.\n- Default: `'blob'`\n\n---\n\n## Methods\n\n#### `ws.open()`\n- Open the Reconnecting Websocket\n\n#### `ws.close(code, reason)`\n- Closes the WebSocket connection or connection attempt, if any. If the connection is already CLOSED, this method does nothing.\n- `code` is optional the closing code (default value 1000). [https://tools.ietf.org/html/rfc6455#section-7.4.1](https://tools.ietf.org/html/rfc6455#section-7.4.1)\n- `reason` is the optional reason that the socket is being closed. [https://tools.ietf.org/html/rfc6455#section-7.1.6](https://tools.ietf.org/html/rfc6455#section-7.1.6)\n\n#### `ws.refresh()`\n- Refresh the connection if still open (close and then re-open it).\n\n#### `ws.send(data)`\n- Transmits data to the server over the WebSocket connection.\n- Accepts @param data a text string, ArrayBuffer or Blob\n\nLike this? Check out [websocketd](https://github.com/joewalnes/websocketd) for the simplest way to create WebSocket backends from any programming language.\n\n[Follow @joewalnes](https://twitter.com/joewalnes)\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/joewalnes/reconnecting-websocket/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/joewalnes/reconnecting-websocket.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.1"
}
